version: '1.0.{build}'
image: Visual Studio 2017
configuration: Release
branches:
  only:
    - master
init:
# Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
install:
# Install repo specific stuff here
before_build:
# Display .NET Core version
  - cmd: dotnet --version
# Display minimal restore text
  - cmd: dotnet restore ./uGraph.sln --verbosity m
  - choco install opencover.portable
  - choco install codecov
#build_script:
# output will be in ./src/bin/debug/netcoreapp1.1/publish
#  - cmd: dotnet publish ./uGraph.sln
after_build:
# For once the build has completed
# artifacts:
#  - path: '\src\bin\Debug\netcoreapp2.0\publish'
# name: uGraph
# type: WebDeployPackage
# clone_depth: 1
# before_test:
#   - echo Starting Tests
#test:
#  assemblies:
#    only:
#      - '**\*.Test.dll'
#  categories:
#    except:
#      - Ignore
# after_test:
#   - echo Tests finished
# test_script:
  # - cmd: %xunit20%\xunit.console 'C:\projects\ugraph\uGraph.Test\bin\Release\netcoreapp2.0\uGraph.Test.dll' -appveyor
test_script:
 - OpenCover.Console.exe -register:user -target:"%xunit20%\xunit.console.x86.exe" -targetargs:".\uGraph\bin\Release\netstandard2.0\uGraph.Test.dll -noshadow" -output:"coverage.xml" -filter:"+[uGraph*]* -[uGraph.Test*]*"
after_test:
   - cmd: nuget pack uGraph\uGraph.nuspec
   - ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
      bash codecov.sh -f "coverage.xml" -t 7afdbb96-e7d0-447a-a473-4af689ccfa40
artifacts:
  - path: '.\uGraph\bin\Release\netstandard2.0\uGraph.dll'
    name: uGraph.dll
  - path: '**\*.nupkg'
deploy:
  provider: NuGet
  api_key:
    secure: EjEe+MWZwP0oCWqmxh1+51LEl34PIFzWvWc8vrcBCtkEqE2YVjlBR/jLtLlDxLUS
  artifact: /.*\.nupkg/
on_finish :
# any cleanup in here
# deploy: off
